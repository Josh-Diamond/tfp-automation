---
name: Get latest Rancher tag
description: Gets the latest Rancher tag for the specified release lines
inputs:
  release_lines:
    description: "List Rancher release lines"
    required: true
  prime_artifacts_path:
    description: "Path to prime artifacts"
    required: true
runs:
  using: composite
  steps:
    - run: |
        RELEASE_LINES="${{ inputs.release_lines }}"
        TAGS=$(curl -s https://api.github.com/repos/rancher/rancher/releases | jq -r '.[].tag_name')

        for RELEASE_LINE in $RELEASE_LINES; do
          VERSION=$(echo "$TAGS" | grep "^$RELEASE_LINE" | sort -V)
          LATEST=$(echo "$VERSION" | tail -n 1)
          GA_RELEASE=$(echo "$VERSION" | grep -Ev -- '-(rc|alpha|hotfix)' | tail -n 1)

          if [ "$(printf "$GA_RELEASE\n$LATEST" | sort -V | tail -n 1)" == "$LATEST" ]; then
            LATEST_VERSION="$LATEST"
          else
            LATEST_VERSION="$GA_RELEASE"
          fi

          echo "Latest tag for $RELEASE_LINE: $LATEST_VERSION"

          if [[ "$RELEASE_LINE" == "v2.11" ]]; then
            RELEASE_JSON=$(curl -s "https://api.github.com/repos/rancher/rancher/releases/tags/$LATEST_VERSION")
            ASSET_COUNT=$(echo "$RELEASE_JSON" | jq '.assets | length')

            echo "Asset count for $LATEST_VERSION: $ASSET_COUNT"

            if [ "$ASSET_COUNT" -ne 20 ]; then
              echo "Asset count: $ASSET_COUNT. Expected 20 assets..."
              continue
            fi
          else
            RELEASE_JSON=$(curl -s ${{ inputs.prime_artifacts_path }}/$RELEASE_LINE/rancher-images.txt)

            if [[ $? -ne 0 ]]; then
              echo "Unable to reach: ${{ inputs.prime_artifacts_path }}"
              continue
            fi
          fi

          SUFFIX=$(echo "$RELEASE_LINE" | tr -d '.')
          OUTPUT_NAME="LATEST_TAG_${SUFFIX}"
          echo "$OUTPUT_NAME=$LATEST_VERSION" >> $GITHUB_ENV
        done
      shell: bash